#!/bin/bash

# Install GRAV
mkdir -p \
  /var/www/grav
if [[ -f /grav/grav.zip ]]; then
  unzip /grav/grav.zip -d /grav
  files=('CHANGELOG.md' 'CODE_OF_CONDUCT.md' 'CONTRIBUTING.md' 'LICENSE.txt' 'README.md' 'composer.json' 'composer.lock' 'index.php' 'robots.txt')
  for i in "${files[@]}"
  do
    mv /grav/grav/"$i" /var/www/grav/
  done
  dirs=('assets' 'bin' 'cache' 'images' 'system' 'tmp' 'vendor' 'webserver-configs')
  for i in "${dirs[@]}"
  do
    mv /grav/grav/"$i" /var/www/grav/
  done
fi

# Setup GRAV
if [[ ! -e /var/www/grav/backup/.gitkeep ]]; then
  echo "Fresh Install moving backup"
  cp -r /grav/grav/backup /var/www/grav
fi

if [[ ! -e /var/www/grav/logs/.gitkeep ]]; then
  echo "Fresh Install moving logs"
  cp -r /grav/grav/logs /var/www/grav
fi

if [[ ! -e /var/www/grav/user/config/site.yaml ]]; then
  echo "Fresh Install moving user configs"
  cp -r /grav/grav/user /var/www/grav
fi

# check for supported GRAV_MULTISITE settings
echo "Checking for multisite environment"
case $GRAV_MULTISITE in
  subdirectory)
    echo "Copying multisite subdirectory setup.php"
    cp /tmp/env/setup_subdirectory.php /var/www/grav/setup.php
    mkdir -p /var/www/grav/user/sites
    ;;
  subdomain)
    echo "Copying multisite subdomain setup.php"
    cp /tmp/env/setup_subdomain.php /var/www/grav/setup.php
    mkdir -p /var/www/grav/user/sites
    ;;
  *)
    echo "Multisite not enabled, continuing"
    ;;
esac

# allow specifying a custom client_max_body_size for nginx
if [[ -n $NGINX_CLIENT_MAX_BODY_SIZE ]]; then
  sed -i.bak "s/client_max_body_size .*;/client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};/g" /etc/nginx/nginx.conf
fi

# Copy robots.txt file with disallow everything directive if set
ROBOTS_DISALLOW=${ROBOTS_DISALLOW:-false}
if [[ $ROBOTS_DISALLOW == "true" ]]; then
  echo "Copying disallowing robots.txt .."
  cp -f /tmp/extras/robots.disallow.txt /var/www/grav/robots.txt
fi

# Clean
rm -rf /grav
rm -rf /var/www/html
rm -rf /tmp/env /tmp/extras

DUID=${DUID:-911}
DGID=${DGID:-911}

groupmod -o -g "$DGID" xyz
usermod -o -u "$DUID" xyz
sed -i -e 's/www-data/xyz/g' /etc/php/7.4/fpm/pool.d/www.conf

# Set Permissions
chown -R xyz:xyz /var/www
mkdir /run/php && chown -R xyz:xyz /run/php
chmod 777 /tmp
find /var/www/grav -type f -exec chmod 664 {} \;
find /var/www/grav/bin -type f -exec chmod 775 {} \;
find /var/www/grav -type d -exec chmod 775 {} \;
find /var/www/grav -type d -exec chmod +s {} \;
umask 0002

bin/grav scheduler -i
crontab -l

service php7.4-fpm start
service nginx start
## start cron
service cron start
## trap SIGINT and SIGTERM signals and gracefully exit
trap "service cron stop; kill \$!; exit" SIGINT SIGTERM
tail -f /dev/null
